@using OrganizationalChart.Shared
@namespace OrganizationalChart

<div id="diagrambuilder-container" style="visibility:visible;" class=@DiagramBuilderClassName>
    <DiagramMenuBar @ref="@MenuBar"></DiagramMenuBar>
    <DiagramToolBar @ref="@Toolbar"></DiagramToolBar>
    <div class='row content' style="padding-top:0px">
        <div class='main-content' role='main'>
            <DiagramMainContent @ref="@DiagramContent"></DiagramMainContent>

            <div id="shortcutDiv" style="height: 230px;padding: 10px;background-color: #fff7b5;border: 1px solid #fff7b5;position: absolute;margin:3px;display: @ShowOrgShortCutKey">
                <div id="closeIconDiv" style="float: right;width: 22px;height: 22px;border: 1px solid #fff7b5;" onclick="@ShowHideShortcutKey">
                    <span class="sf-icon-Close" style="font-size: 10px; cursor: pointer"></span>
                </div>
                <div><span class="db-html-font-medium">Quick shortcuts</span></div>
                <div style="padding-top: 10px">
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Tab : </span><span class="db-html-font-normal">Add a child to the parent</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Enter : </span><span class="db-html-font-normal">Add a child to the same level</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Shift + Tab : </span><span class="db-html-font-normal">Move the child parent to the next level</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Delete : </span><span class="db-html-font-normal">Delete a topic</span>
                        </li>
                    </ul>
                </div>
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">Arrow(Up, Down, Left, Right) : </span><span class="db-html-font-normal">Navigate between topics</span>
                        </li>
                    </ul>
                </div>           
                <div>
                    <ul>
                        <li>
                            <span class="db-html-font-medium">F1 : </span><span class="db-html-font-normal">Show/Hide shortcut Key</span>
                        </li>
                    </ul>
                </div>       
            </div>
            <div class=@PropertyPanelClassName style="overflow:auto;">
                <OrgChartPropertyContainer @ref="@OrgChartPropertyPanel"></OrgChartPropertyContainer>
            </div>
        </div>
    </div>
</div>

@code {
    /// <summary>
    /// Represents the main layout of the diagram application.
    /// </summary>
    public MainLayout Parent;

    /// <summary>
    /// Represents the toolbar used in the diagram application.
    /// </summary>
    public DiagramToolBar Toolbar{ get; set; }

    /// <summary>
    /// The CSS class name for the main container of the diagram builder.
    /// </summary>
    public string DiagramBuilderClassName = "diagrambuilder-container";

    /// <summary>
    /// Represents the main content of the diagram application.
    /// </summary>
    public DiagramMainContent DiagramContent{ get; set; }

    /// <summary>
    /// The CSS class name for the property panel container.
    /// </summary>
    public string PropertyPanelClassName = "db-property-editor-container";

    /// <summary>
    /// Represents the menu bar used in the diagram application.
    /// </summary>
    public DiagramMenuBar MenuBar{ get; set; }

    /// <summary>
    /// Represents the property panel container for organizing chart properties.
    /// </summary>
    public OrgChartPropertyContainer OrgChartPropertyPanel;

    /// <summary>
    /// Specifies the shortcut key to show/hide the organizational chart. Default value is "block".
    /// </summary>
    public string ShowOrgShortCutKey = "block";


    /// <summary>
    /// The JS runtime used for JavaScript interop in the diagram application.
    /// </summary>
    [Inject]
    protected IJSRuntime? jsRuntime { get; set; }

    /// <summary>
    /// This method is called after the component has rendered.
    /// </summary>
    /// <param name="firstRender">Indicates whether this is the first time the component is rendered.</param>
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        
        if (firstRender)
        {
            if (this.MenuBar != null)
                this.MenuBar.Parent = this;
            if (this.Toolbar != null)
                this.Toolbar.Parent = this;
            if (this.DiagramContent != null)
                this.DiagramContent.Parent = this;
            if (this.OrgChartPropertyPanel != null)
                this.OrgChartPropertyPanel.Parent = this;
        }
        await base.OnAfterRenderAsync(firstRender);
    }
    /// <summary>
    /// Toggles the visibility of the shortcut key for showing/hiding elements.
    /// </summary>
    public void ShowHideShortcutKey()
    {
             
         ShowOrgShortCutKey = ShowOrgShortCutKey == "none" ? "block" : "none";
        int shortcutIndex = MenuBar.WindowMenuItems.FindIndex(item => item.Text == "Show Shortcuts");
        MenuBar.WindowMenuItems[shortcutIndex].IconCss = MenuBar.WindowMenuItems[shortcutIndex].IconCss == "sf-icon-blank" ? "sf-icon-Selection" : "sf-icon-blank";
        StateChanged();
    }
    /// <summary>
    /// Triggers a state change and re-renders the component.
    /// </summary>
    public void StateChanged()
    {
        StateHasChanged();
    }

}
